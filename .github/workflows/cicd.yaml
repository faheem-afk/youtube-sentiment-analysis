name: CICD Pipeline

on: push

jobs: 
  model-deployment:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set-up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.12.2' 
      
      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip
      
      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      - name: Run Pipeline
        env: 
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: us-east-1
          TOKENIZERS_PARALLELISM: false
        run: |
          dvc repro
      
      - name: Push DVC-tracked data to remote
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: us-east-1
        run: |
          dvc push 
        
      - name: Configure Git
        run: |
          git configure --global user.name "github-actions[bot]"
          git configure --global user.email "github-actions[bot]@users.noreply.github.com"
          
      - name: Add changes to Git
        run: |
          git add .
          
      - name: Commit changes
        if: ${{ github.actor != 'github-actions[bot]' }}
        run: |
          git commit -m"Automated commit of DVC outputs and updated code"
      
      - name: Push changes
        if: ${{ github.actor != 'github-actions[bot]' }}
        env: 
          GITHUB_TOKEN: ${{ secrets.CI }}
        run: |
          git push origin ${{ github.ref_name }}

          
        
      
        
          